apiVersion: apps/v1
kind: Deployment
metadata:
  name: graphql-deployment
spec:
  # replicas: 3
  selector:
    matchLabels:
      app: graphql-server
  template:
    metadata:
      labels:
        app: graphql-server
    spec:
      containers:
        - name: graphql-server
          image: aj09/social-server #dockerhub
          # imagePullPolicy: Always # always pull image
          resources:
            requests:
              memory: "500Mi"
              cpu: "1000m"
            limits:
              memory: "1.5Gi"
              cpu: "2000m"
          ports:
            - containerPort: 4000
          readinessProbe: # delay pod from receiving requests
            httpGet:
              path: /health
              port: 4000
            initialDelaySeconds: 5
            periodSeconds: 5
          env: #env variable
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: secret # secret metadata name
                  key: JWT_SECRET
            - name: FRONTEND_URL
              valueFrom:
                configMapKeyRef:
                  name: config # configMap file
                  key: frontendUrl
            - name: PG_USER
              valueFrom:
                secretKeyRef:
                  name: secret
                  key: POSTGRES_USER_SECRET
            - name: PG_HOST
              # value: postgres-service
              # value: 192.168.99.1
              value: host.docker.internal
            - name: PG_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: secret
                  key: POSTGRES_PASSWORD_SECRET
            - name: PG_DB
              valueFrom:
                secretKeyRef:
                  name: secret
                  key: POSTGRES_DB_SECRET
            - name: CASSANDRA_CONTACT_POINT
              value: host.docker.internal #docker desktop kubernetes
              # value: cassandra-service
              # value: cassandra-service.default.svc.cluster.local
              # value: "cassandra-0.cassandra,cassandra-1.cassandra,cassandra-2.cassandra"
              # value: 192.168.99.1 #for minikube 
            - name: CASSANDRA_DATA_CENTER
              value: datacenter1
            - name: CASSANDRA_KEYSPACE
              value: social_media

            - name: REDIS_HOST
              value: host.docker.internal
              # value: redis-service 
              # value: 192.168.99.1   

            - name: KAFKA_HOST_IP
              value: host.docker.internal
              # value: kafka-service
              # value: 192.168.99.1
            - name: KAFKA_BROKER
              value: host.docker.internal:9092
              # value: kafka-service
              # value: 192.168.99.1:9092


            # - name: CASSANDRA_USER
            #   valueFrom:
            #     secretKeyRef:
            #       name: secret
            #       key: CASSANDRA_USER
            # - name: CASSANDRA_PASSWORD
            #   valueFrom:
            #     secretKeyRef:
            #       name: secret
            #       key: CASSANDRA_PASSWORD
            # - name: REDIS_PASSWORD
            #   valueFrom:
            #     secretKeyRef:
            #       name: secret
            #       key: REDIS_PASSWORD
